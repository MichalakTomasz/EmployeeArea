// <auto-generated />
using System;
using EmployeeArea.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeArea.DataContext.Migrations
{
    [DbContext(typeof(EmployeeAreaDbContext))]
    partial class EmployeeAreaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EmployeeArea.Models.Absence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AbsenceTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("From")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AbsenceTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("EmployeeArea.Models.AbsenceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AbsenceTypes");
                });

            modelBuilder.Entity("EmployeeArea.Models.Delegation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("From")
                        .HasColumnType("TEXT");

                    b.Property<string>("Place")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Delegations");
                });

            modelBuilder.Entity("EmployeeArea.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeArea.Models.JobRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EmploeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JobEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JobStart")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmploeeId");

                    b.ToTable("JobRegistrations");
                });

            modelBuilder.Entity("EmployeeArea.Models.Absence", b =>
                {
                    b.HasOne("EmployeeArea.Models.AbsenceType", "AbsenceType")
                        .WithMany()
                        .HasForeignKey("AbsenceTypeId");

                    b.HasOne("EmployeeArea.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("AbsenceType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeArea.Models.Delegation", b =>
                {
                    b.HasOne("EmployeeArea.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeArea.Models.JobRegistration", b =>
                {
                    b.HasOne("EmployeeArea.Models.Employee", "Emploee")
                        .WithMany()
                        .HasForeignKey("EmploeeId");

                    b.Navigation("Emploee");
                });
#pragma warning restore 612, 618
        }
    }
}
